---
- hosts: control:execute
  sudo: True
  gather_facts: False
  tasks:
    - name: add mesos signing key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=81026D0004C44CF7EF55ADF8DF7D54CBE56151BF

    - name: add mesosphere repository
      apt_repository: repo='deb http://repos.mesosphere.io/ubuntu trusty main' state=present update_cache=yes

#################################################
- hosts: control
  sudo: True
  gather_facts: False
  tasks:
    - name: no launching things automatically by default
      shell: echo 'manual' > /etc/init/{{ item }}.override
      with_items:
        - mesos-slave

    - name: things we DO want to launch
      file: path=/etc/init/{{ item }}.override state=absent
      with_items:
        - zookeeper
        - marathon
        - mesos-master

    - name: install mesos stuff
      apt: state=present name={{ item }}
      with_items:
        - mesos
        - marathon
#        - chronos
        - zookeeper
        - zookeeperd
        - zookeeper-bin

    # --- install & configure aurora ---
    - name: install aurora
      unarchive: src=pkg/aurora-scheduler-0.7.0-INCUBATING.zip dest=/usr/local

    - name: vanity symlink for aurora
      file: src=/usr/local/aurora-scheduler-0.7.0-INCUBATING dest=/usr/local/aurora-scheduler state=link

    - name: aurora vanity start script
      template: src=config/aurora-start.j2 dest=/usr/local/bin/aurora-start mode=0755

    - name: create aurora user & group
      user: name=aurora system=yes state=present shell=/bin/false createhome=no

    - name: create aurora dirs
      file: state=directory path=/var/lib/{{ item }} owner=aurora group=aurora mode=0755
      with_items:
        - aurora
        - aurora/backups
        - aurora/db

    - stat: path=/var/lib/aurora/.log_initialized
      register: aurora_log_init
    - name: initialize aurora database
      command: mesos-log initialize --path=/var/lib/aurora/db
      sudo: yes
      sudo_user: aurora
      when: aurora_log_init.stat.exists == false
    - file: state=touch path=/var/lib/aurora/.log_initialized
      when: aurora_log_init.stat.exists == false

    - name: add aurora to upstart
      copy: src=config/aurora.conf dest=/etc/init/aurora.conf owner=root group=root mode=0644

    # --- configure zk ---
    - name: configure /etc/zookeeper/conf/myid
      template: src=config/myid.j2 dest=/etc/zookeeper/conf/myid
    - name: configure /etc/zookeeper/conf/zoo.cfg
      template: src=config/zoo.cfg.j2 dest=/etc/zookeeper/conf/zoo.cfg

    # --- configure mesos ---
    - name: configure /etc/mesos/zk
      template: src=config/zk.j2 dest=/etc/mesos/zk
    - name: configure /etc/mesos-master/quorum
      template: src=config/quorum.j2 dest=/etc/mesos-master/quorum
    - name: configure /etc/mesos-master/{ip, hostname}
      template: src=config/ip.j2 dest=/etc/mesos-master/{{ item }}
      with_items:
        - ip
        - hostname

    # --- configure marathon ---
    - name: init marathon conf dir
      file: path=/etc/marathon/conf state=directory recurse=yes
    - name: configure /etc/marathon/conf/hostname
      template: src=config/ip.j2 dest=/etc/marathon/conf/hostname
    - name: configure /etc/marathon/conf/master
      template: src=config/zk.j2 dest=/etc/marathon/conf/master
    - name: configure /etc/marathon/conf/zk
      template: src=config/marathon_zk.j2 dest=/etc/marathon/conf/zk

    # --- (re)start things ---
    - name: start mesos things
      service: name={{ item }} state=restarted enabled=yes
      with_items:
        - zookeeper
        - mesos-master
        - marathon
        - aurora
#        - chronos

#################################################
- hosts: execute
  sudo: True
  gather_facts: False
  tasks:
    - name: no launching things automatically by default
      shell: echo 'manual' > /etc/init/{{ item }}.override
      with_items:
        - zookeeper
        - mesos-master
        - marathon

    - name: things we DO want to launch
      file: path=/etc/init/{{ item }}.override state=absent
      with_items:
        - mesos-slave

    - name: install mesos stuff
      apt: state=present name={{ item }}
      with_items:
        - mesos

    # --- configure mesos ---
    - name: configure /etc/mesos/zk
      template: src=config/zk.j2 dest=/etc/mesos/zk
    - name: configure /etc/mesos-slave/{ip, hostname}
      template: src=config/ip.j2 dest=/etc/mesos-slave/{{ item }}
      with_items:
        - ip
        - hostname

    # --- (re)start things ---
    - name: start mesos things
      service: name={{ item }} state=restarted enabled=yes
      with_items:
        - mesos-slave

